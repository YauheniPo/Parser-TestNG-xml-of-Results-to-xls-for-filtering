# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

jobs:
- job: TestNGReportParsingTest
  pool:
    vmImage: $(vmImageVar)
#    vmImage: 'vs2017-win2016'
#    vmImage: 'Ubuntu 16.04'
#    vmImage: 'macOS-10.13'

  steps:
  - script: ls
    displayName: ls command

  - task: Maven@3
    displayName: Maven Package
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.8'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      goals: 'clean test package -Dmaven.wagon.http.pool=false'

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/TEST-*.xml'
      searchFolder: '$(System.DefaultWorkingDirectory)'
      mergeTestResults: false
      failTaskOnFailedTests: true
      publishRunAttachments: true

  - template: artifacts.yml

  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/jar'
      artifact: 'parse_testng_results-1.0-SNAPSHOT-jar-with-dependencies.jar'

  - task: UniversalPackages@0
    inputs:
      command: 'download'
      downloadDirectory: '$(System.DefaultWorkingDirectory)/jar'
      feedsToUse: 'internal'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'jar'
      publishLocation: 'FilePath'
      TargetPath: '$(Pipeline.Workspace)/jar/parse_testng_results-1.0-SNAPSHOT-jar-with-dependencies.jar'
  
  - script: ls
    displayName: $(vmImageVar) env
